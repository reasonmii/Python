
# 문제2 : JAVA독과 함께!

돌의내구도 = [1, 2, 1, 4]
독 = [{
        "이름" : "루비독",
        "나이" : "95년생",
        "점프력" : "3",
        "몸무게" : "4",
        },{
        "이름" : "피치독",
        "나이" : "95년생",
        "점프력" : "3",
        "몸무게" : "3",
        },{
        "이름" : "씨-독",
        "나이" : "72년생",
        "점프력" : "2",
        "몸무게" : "1",
        },{
        "이름" : "코볼독",
        "나이" : "59년생",
        "점프력" : "1",
        "몸무게" : "1",
        },              # 보통은 comma를 이렇게 마지막에 찍는 형태 많이 사용함
]

#**출력**
#생존자 : ['씨-독']


########## 방법1
def 징검다리를건너라(돌의내구도, 독):
    answer = [독[i]['이름'] for i in range(len(독))]
    return answer

print(징검다리를건너라(돌의내구도, 독))
# ['루비독', '피치독', '씨-독', '코볼독']


########## 방법2 : 간단하게 짜기
def 징검다리를건너라(돌의내구도, 독):
    answer = [i['이름'] for i in 독]
    return answer

print(징검다리를건너라(돌의내구도, 독))
# ['루비독', '피치독', '씨-독', '코볼독']


def 징검다리를건너라(돌의내구도, 독):
    answer = [i['이름'] for i in 독]
    for i in 독:
        독의위치 = 0
        while 독의위치 < len(돌의내구도)-1:
            독의위치 += int(i['점프력'])
            # 돌의내구도는 python이라 0부터 시작하기 때문
            돌의내구도[독의위치-1] -= int(i['몸무게'])
            if 돌의내구도[독의위치-1] < 0:
                answer[answer.index(i['이름'])] = 'fail'
                break   # 바로 위 while문만 탈출
    return [i for i in answer if i != 'fail']

# copy()가 없으면
# 한 번 실행했을 때 그 값으로 돌의내구도, 독이 update, 저장 됨
print(징검다리를건너라(돌의내구도.copy(), 독.copy()))
# ['씨-독']


# big-O : 알고리즘의 효율성을 나타내는 지표
# big-O를 이용하여 내가 개선한 알고리즘이 빨라졌는지, 메모리를 많이 잡아 먹지는 않는지 등의 알고리즘의 성능을 판단
# remove O(N)
# del O(1) : del은 빅오표기법에서 1임
# 따라서 빠르게 쓸 수 있는 del O를 쓰고자 함
def 징검다리를건너라(돌의내구도, 독):
    answer = [i['이름'] for i in 독]
    for i in 독:
        독의위치 = 0
        while 독의위치 < len(돌의내구도)-1:
            독의위치 += int(i['점프력'])
            # 돌의내구도는 python이라 0부터 시작하기 때문
            돌의내구도[독의위치-1] -= int(i['몸무게'])
            if 돌의내구도[독의위치-1] < 0:
                del answer[answer.index(i['이름'])]
                break   # 바로 위 while문만 탈출
    return [i for i in answer if i != 'fail']

print(징검다리를건너라(돌의내구도.copy(), 독.copy()))
# ['씨-독']


돌의내구도 = [5, 3, 4, 1, 3, 8, 3]
# 루비독이 건널 때 : [5, 3, 0, 1, 3, 4, 3] -> 성공
# 피치독이 건널 때 : 3번째 칸 0이기 때문에 바로 빠짐
# 씨독이 건널 때 : [5, 2, 0, 0, 3, 3, 3] -> 성공
# 코볼독 : 3번째 칸에서 0이기 때문에 빠짐
print(징검다리를건너라(돌의내구도.copy(), 독.copy()))
# ['루비독', '씨-독']


########## copy() 함수 설명
# 일반적으로 xx처럼 값인 경우에는 def 함수 실행했다고, 값 자체가 변하지 않지만
# ll처럼 list인 경우에는 함수 실행 시 값 자체가 변함 -> 주의!
ll = [1,2,3,4,5]

def change(l):
    l[0] = 1000
change(ll)

ll     # [1000, 2, 3, 4, 5]

xx = 100
def change(x):
    x += 1000
change(xx)

xx     # 100


########## 방법3 : json 사용하기
import json

JSON독 = json.dumps(독, ensure_ascii=False)
JSON독

JSON독[0]    # '['
JSON독[:10]  # '[{"이름": "루'

JSON독 = json.loads(JSON독)
JSON독[0]
# {'이름': '루비독', '나이': '95년생', '점프력': '3', '몸무게': '4'}


